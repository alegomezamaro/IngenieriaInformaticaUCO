Start testing: Jun 08 12:58 CEST
----------------------------------------------------------
11/11 Testing: TestGraphFoldUnfold
11/11 Test: TestGraphFoldUnfold
Command: "/usr/bin/python3" "run_tests.py" "/home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/build/graph//test_graph" "03_tests_graph_fold_unfold"
Directory: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph
"TestGraphFoldUnfold" start time: Jun 08 12:58 CEST
Output:
----------------------------------------------------------
Test running: 03_tests_graph_fold_unfold/00 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<char, char>; E = float; EdgeRef = std::shared_ptr<Edge<Item<char, char>, float> >; VertexRef = std::shared_ptr<Vertex<Item<char, char> > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/01 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<char, char>; E = float; EdgeRef = std::shared_ptr<Edge<Item<char, char>, float> >; VertexRef = std::shared_ptr<Vertex<Item<char, char> > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/02 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<char, char>; E = float; EdgeRef = std::shared_ptr<Edge<Item<char, char>, float> >; VertexRef = std::shared_ptr<Vertex<Item<char, char> > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/03 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<char, char>; E = float; EdgeRef = std::shared_ptr<Edge<Item<char, char>, float> >; VertexRef = std::shared_ptr<Vertex<Item<char, char> > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/04 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; E = float; EdgeRef = std::shared_ptr<Edge<Item<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, float> >; VertexRef = std::shared_ptr<Vertex<Item<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/05 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<int, int>; E = float; EdgeRef = std::shared_ptr<Edge<Item<int, int>, float> >; VertexRef = std::shared_ptr<Vertex<Item<int, int> > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

Test running: 03_tests_graph_fold_unfold/06 ... [31mTest finished with error code -6[0m
test_graph: /home/ale/Documents/GitHub/IngenieriaInformaticaUCO/ED/repaso/P6wgraph_paths/graph/graph_imp.hpp:336: Graph<T, E>::EdgeRef Graph<T, E>::add_edge(const VertexRef&, const VertexRef&, const E&) [with T = Item<City_data, std::__cxx11::basic_string<char> >; E = float; EdgeRef = std::shared_ptr<Edge<Item<City_data, std::__cxx11::basic_string<char> >, float> >; VertexRef = std::shared_ptr<Vertex<Item<City_data, std::__cxx11::basic_string<char> > > >]: Assertion `num_edges() == (old_num_edges + 1)' failed.

0/7 tests passed.
<end of output>
Test time =   1.52 sec
----------------------------------------------------------
Test Failed.
"TestGraphFoldUnfold" end time: Jun 08 12:58 CEST
"TestGraphFoldUnfold" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Jun 08 12:58 CEST
